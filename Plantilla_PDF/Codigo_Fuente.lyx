#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass Plantilla
\begin_preamble
\usepackage{Plantilla}
\end_preamble
\use_default_options true
\begin_modules
multicol
\end_modules
\maintain_unincluded_children false
\language spanish
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize 12
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize letterpaper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 0
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 0
\use_package mhchem 1
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation landscape
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\paperwidth 18.2cm
\paperheight 32.5cm
\leftmargin 3cm
\topmargin 5cm
\rightmargin 3cm
\bottommargin 3cm
\secnumdepth 5
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 2
\paperpagestyle default
\bullet 0 2 1 -1
\bullet 1 2 14 -1
\bullet 2 2 16 -1
\bullet 3 2 34 -1
\tracking_changes false
\output_changes false
\html_math_output 3
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Titulo
Nombre del Software
\end_layout

\begin_layout Subtitulo
Código Fuente
\end_layout

\begin_layout Autores
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="1">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Autor 1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Autor 2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Autor 3
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout AutoresCorto
Autor 1, Autor 2, Autor 3
\end_layout

\begin_layout Universidad
Nombre de la Universidad
\end_layout

\begin_layout Ciudad
Nombre de la Ciudad
\end_layout

\begin_layout Fecha
Año de Publicación
\end_layout

\begin_layout Logo
Imagenes/Logo.png
\end_layout

\begin_layout Version
1.22.12.2
\end_layout

\begin_layout GenerarPortada

\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout TipoCapitulo
Capítulo
\end_layout

\begin_layout Capitulo
Código Fuente
\end_layout

\begin_layout Standard
Lorem ipsum dolor sit amet, consectetur adipiscing elit.
 In finibus mi sit amet lectus varius, mattis ullamcorper felis dapibus.
 In a est fermentum, tincidunt tellus quis, condimentum odio.
 Phasellus facilisis egestas sem, at mattis quam sodales vel.
 Proin pulvinar sodales faucibus.
 Morbi semper, erat vulputate vulputate posuere, metus turpis cursus tortor,
 a commodo erat turpis et lectus.
 Vivamus quis turpis at nulla placerat consequat ut sed nulla.
 In arcu turpis, porta ac vestibulum vel, tristique in erat.
 Quisque eu turpis consectetur, accumsan nulla ut, luctus nunc.
 Morbi porta varius ultricies.
\end_layout

\begin_layout Seccion
Facultades.js
\end_layout

\begin_layout Standard
Descripción del Código
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstset{style=codigoJavascript}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{lstlisting}
\end_layout

\begin_layout Plain Layout

const { pool, MENSAJE_ERROR_SERVIDOR } = require("../config/config");
\end_layout

\begin_layout Plain Layout

const Utilidades = require("./utilidades.model");
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

class Facultad {
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    async postFacultad(datos) {
\end_layout

\begin_layout Plain Layout

       return new Promise((resolve, reject) => {
\end_layout

\begin_layout Plain Layout

    
\end_layout

\begin_layout Plain Layout

          let idfacultad = new Utilidades().generarID();
\end_layout

\begin_layout Plain Layout

          let {facultad} = datos;
\end_layout

\begin_layout Plain Layout

          let query = `INSERT INTO public.facultades (idfacultad, facultad)
 VALUES ($1, $2)`;
\end_layout

\begin_layout Plain Layout

          pool.query(query, [idfacultad, facultad], (error, results) => {
\end_layout

\begin_layout Plain Layout

             if (error) {
\end_layout

\begin_layout Plain Layout

                reject({
\end_layout

\begin_layout Plain Layout

                   Response: MENSAJE_ERROR_SERVIDOR + error,
\end_layout

\begin_layout Plain Layout

                   Status: false
\end_layout

\begin_layout Plain Layout

                });
\end_layout

\begin_layout Plain Layout

                return;
\end_layout

\begin_layout Plain Layout

             }
\end_layout

\begin_layout Plain Layout

    
\end_layout

\begin_layout Plain Layout

             resolve({
\end_layout

\begin_layout Plain Layout

                Response: 'La facultad se creó correctamente',
\end_layout

\begin_layout Plain Layout

                Status: true
\end_layout

\begin_layout Plain Layout

             });
\end_layout

\begin_layout Plain Layout

          });
\end_layout

\begin_layout Plain Layout

       });
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    async putFacultad(datos) {
\end_layout

\begin_layout Plain Layout

       return new Promise((resolve, reject) => {
\end_layout

\begin_layout Plain Layout

    
\end_layout

\begin_layout Plain Layout

          let {idfacultad, facultad} = datos;
\end_layout

\begin_layout Plain Layout

          let query = `UPDATE public.facultades SET facultad=$1 WHERE idfacultad=
'${idfacultad}'`;
\end_layout

\begin_layout Plain Layout

          pool.query(query, [facultad], (error, results) => {
\end_layout

\begin_layout Plain Layout

             if (error) {
\end_layout

\begin_layout Plain Layout

                reject({
\end_layout

\begin_layout Plain Layout

                   Response: MENSAJE_ERROR_SERVIDOR + error,
\end_layout

\begin_layout Plain Layout

                   Status: false
\end_layout

\begin_layout Plain Layout

                });
\end_layout

\begin_layout Plain Layout

                return;
\end_layout

\begin_layout Plain Layout

             }
\end_layout

\begin_layout Plain Layout

    
\end_layout

\begin_layout Plain Layout

             resolve({
\end_layout

\begin_layout Plain Layout

                Response: 'La facultad se actualizó correctamente',
\end_layout

\begin_layout Plain Layout

                Status: true
\end_layout

\begin_layout Plain Layout

             });
\end_layout

\begin_layout Plain Layout

          });
\end_layout

\begin_layout Plain Layout

       });
\end_layout

\begin_layout Plain Layout

    }   
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    async getFacultadById(idfacultad) {
\end_layout

\begin_layout Plain Layout

       return new Promise((resolve, reject) => {
\end_layout

\begin_layout Plain Layout

          let query = `SELECT * FROM public.facultades WHERE idfacultad='${idfacu
ltad}'`;
\end_layout

\begin_layout Plain Layout

          pool.query(query, (error, results) => {
\end_layout

\begin_layout Plain Layout

             if (error) {
\end_layout

\begin_layout Plain Layout

                reject({
\end_layout

\begin_layout Plain Layout

                   Response: MENSAJE_ERROR_SERVIDOR + error,
\end_layout

\begin_layout Plain Layout

                   Status: false
\end_layout

\begin_layout Plain Layout

                });
\end_layout

\begin_layout Plain Layout

                return;
\end_layout

\begin_layout Plain Layout

             }
\end_layout

\begin_layout Plain Layout

    
\end_layout

\begin_layout Plain Layout

             resolve({
\end_layout

\begin_layout Plain Layout

                Response: 'La facultad se obtuvo correctamente',
\end_layout

\begin_layout Plain Layout

                Status: true,
\end_layout

\begin_layout Plain Layout

                Object: results.rows[0]
\end_layout

\begin_layout Plain Layout

             });
\end_layout

\begin_layout Plain Layout

          });
\end_layout

\begin_layout Plain Layout

       });
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    async getFacultades() {
\end_layout

\begin_layout Plain Layout

       return new Promise((resolve, reject) => {
\end_layout

\begin_layout Plain Layout

          let query = `SELECT * FROM public.facultades ORDER BY facultad`;
\end_layout

\begin_layout Plain Layout

          pool.query(query, (error, results) => {
\end_layout

\begin_layout Plain Layout

             if (error) {
\end_layout

\begin_layout Plain Layout

                reject({
\end_layout

\begin_layout Plain Layout

                   Response: MENSAJE_ERROR_SERVIDOR + error,
\end_layout

\begin_layout Plain Layout

                   Status: false
\end_layout

\begin_layout Plain Layout

                });
\end_layout

\begin_layout Plain Layout

                return;
\end_layout

\begin_layout Plain Layout

             }
\end_layout

\begin_layout Plain Layout

    
\end_layout

\begin_layout Plain Layout

             resolve({
\end_layout

\begin_layout Plain Layout

                Response: 'Las facultades se obtuvieron correctamente',
\end_layout

\begin_layout Plain Layout

                Status: true,
\end_layout

\begin_layout Plain Layout

                Results: results.rows
\end_layout

\begin_layout Plain Layout

             });
\end_layout

\begin_layout Plain Layout

          });
\end_layout

\begin_layout Plain Layout

       });
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    async deleteFacultad(idfacultad) {
\end_layout

\begin_layout Plain Layout

       return new Promise((resolve, reject) => {
\end_layout

\begin_layout Plain Layout

          let query = `DELETE FROM public.facultades WHERE idfacultad='${idfacult
ad}'`;
\end_layout

\begin_layout Plain Layout

          pool.query(query, (error, results) => {
\end_layout

\begin_layout Plain Layout

             if (error) {
\end_layout

\begin_layout Plain Layout

                reject({
\end_layout

\begin_layout Plain Layout

                   Response: MENSAJE_ERROR_SERVIDOR + error,
\end_layout

\begin_layout Plain Layout

                   Status: false
\end_layout

\begin_layout Plain Layout

                });
\end_layout

\begin_layout Plain Layout

                return;
\end_layout

\begin_layout Plain Layout

             }
\end_layout

\begin_layout Plain Layout

    
\end_layout

\begin_layout Plain Layout

             resolve({
\end_layout

\begin_layout Plain Layout

                Response: 'La facultad se eliminó correctamente',
\end_layout

\begin_layout Plain Layout

                Status: true
\end_layout

\begin_layout Plain Layout

             });
\end_layout

\begin_layout Plain Layout

          });
\end_layout

\begin_layout Plain Layout

       });
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

module.exports = Facultad;
\end_layout

\begin_layout Plain Layout


\backslash
end{lstlisting}
\end_layout

\end_inset


\end_layout

\end_body
\end_document
